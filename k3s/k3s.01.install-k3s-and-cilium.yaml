---
# See https://k3s.io/
# For cilium on k3s see https://docs.cilium.io/en/stable/gettingstarted/k8s-install-helm/ and look for the k3s instructions
- name: Install k3s and cilium
  hosts: all
  become: yes
  gather_facts: True
  vars:
    shared_k3s_config: "--flannel-backend=none --disable-network-policy --disable servicelb --disable traefik --write-kubeconfig-mode 0644"
    network_k3s_config: "--service-cidr 172.30.0.0/16 --cluster-dns 172.30.0.10"
    #network_k3s_config: "--cluster-cidr 172.20.0.0/16 --service-cidr 172.30.0.0/16 --cluster-dns 172.30.0.10"
    k3s_kubeconfig_location: /etc/rancher/k3s/k3s.yaml
    kubeconfig_home_location: Dropbox/Kubernetes/kubeconfig-home-pis-k3s
    kubeconfig_location: ~/Dropbox/Kubernetes/kubeconfig-home-pis-k3s
    cilium_namespace: kube-system
    cilium_archive: cilium-linux-arm64.tar.gz
    cilium_archive_checksum: "{{ cilium_archive }}.sha256sum"
    cilium_values:
      #tunnel: disabled  #disable to not need vxlan
      ipam:
        mode: cluster-pool # default but explicitly defined anyway, let cilium handle ipam
        operator:
          clusterPoolIPv4PodCIDRList: [ "172.20.0.0/16" ] # replaces clusterPoolIPv4PodCIDR in cilium > 1.11
          clusterPoolIPv4MaskSize: 24
      extraArgs: [ "--mtu", "1400" ]
      #egressGateway:
      #  enabled: true
      #bpf:
      #  masquerade: true
      #kubeProxyReplacement: strict 
      #bgp:
      #  enabled: true
      #  announce:
      #    loadbalancerIP: true
      #    podCIDR: true

  tasks:

  - name: Get the helm snap
    community.general.snap:
      name: helm
      state: present
      classic: yes

  - name: Download install script
    ansible.builtin.get_url:
      url: https://get.k3s.io
      dest: /tmp/k3s.sh
      mode: u+r

  # https://rancher.com/docs/k3s/latest/en/installation/ha-embedded/
  # https://docs.cilium.io/en/latest/gettingstarted/k3s/
  - name: Install with clustering, without network stuff on master
    when: inventory_hostname in groups[ 'master_node' ]
    ansible.builtin.shell:
      cmd: cat /tmp/k3s.sh | INSTALL_K3S_EXEC="server {{ shared_k3s_config }} {{ network_k3s_config }} --cluster-init" sh -

  - name: copy across kubeconfig
    when: inventory_hostname in groups[ 'master_node' ]
    block:
    - name: output kubeconfig
      ansible.builtin.shell:
        cmd: cat {{ k3s_kubeconfig_location }}
      register: kubeconfig_output

    - name: write kubeconfig to k3s kubeconfig file
      delegate_to: "localhost"
      become: false
      ansible.builtin.shell:
        cmd: echo "{{ kubeconfig_output.stdout }}" > {{ kubeconfig_location }}

    - name: replace 127.0.0.1 with master_node
      delegate_to: "localhost"
      become: false
      ansible.builtin.replace:
        path: "{{ kubeconfig_location }}"
        regexp: 127\.0\.0\.1
        replace: "{{ groups[ 'master_node' ][0] }}"

  - name: add helm repo
    when: inventory_hostname in groups[ 'master_node' ]
    become: false
    kubernetes.core.helm_repository:
      name: cilium
      repo_url: https://helm.cilium.io/

  #- name: apply cilium bgp configuration
  #  when: inventory_hostname in groups[ 'master_node' ]
  #  delegate_to: "localhost"
  #  become: false
  #
  #  block:
  #  - name: get logged in user
  #    ansible.builtin.shell:
  #      cmd: whoami
  #    register: logged_in_user
  #
  #  - name: apply configuration  
  #    ansible.builtin.shell:  
  #      cmd: kubectl --kubeconfig=/home/{{ logged_in_user.stdout }}/{{ kubeconfig_home_location }} apply -f ./cilium-bgp-config.yaml

  - name: install cilium using helm
    when: inventory_hostname in groups[ 'master_node' ]
    become: false
    kubernetes.core.helm:
      kubeconfig: "{{ k3s_kubeconfig_location }}"
      name: cilium
      chart_ref: cilium/cilium
      #chart_version: 1.11.4
      release_namespace: "{{ cilium_namespace }}"
      create_namespace: true
      values: "{{ cilium_values }}"
    register: task_result
    retries: 20
    delay: 30 #seconds
    until: task_result.status is defined

  - name: Get clustering token
    delegate_to: "{{ groups[ 'master_node' ][0] }}"
    ansible.builtin.shell:
      cmd: cat /var/lib/rancher/k3s/server/node-token
    register: node_token

  - name: Install non-master nodes as control plane nodes
    ignore_errors: True # These might fail as it takes some time to start up/get connected, it's OK.
    when: inventory_hostname not in groups[ 'master_node']
    ansible.builtin.shell:
      cmd: cat /tmp/k3s.sh | INSTALL_K3S_EXEC="server {{ shared_k3s_config }} {{ network_k3s_config }} --server https://{{ groups[ 'master_node' ][0] }}:6443 --token {{ node_token.stdout }}" sh -

  - name: download cilium client
    block:

    - name: download cilium checksum
      ansible.builtin.get_url:
        url: https://github.com/cilium/cilium-cli/releases/latest/download/{{ cilium_archive_checksum }}
        dest: /tmp/{{ cilium_archive_checksum }}
        mode: u+r

    - name: download cilium archive
      ansible.builtin.get_url:
        url: https://github.com/cilium/cilium-cli/releases/latest/download/{{ cilium_archive }}
        dest: /tmp/{{ cilium_archive }}
        mode: u+rx

    - name: check cilium checksum
      ansible.builtin.shell:
        chdir: /tmp
        cmd: sha256sum --check {{ cilium_archive_checksum }}

    - name: unpack cilium archive
      ansible.builtin.unarchive:
        src: /tmp/{{ cilium_archive }}
        dest: /usr/local/bin
        remote_src: yes
